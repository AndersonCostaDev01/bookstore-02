name: Python application

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: bookstore_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_NAME: bookstore_db
      DB_USER: dev
      DB_PASSWORD: dev
      DB_HOST: localhost
      DB_PORT: 5432
      PYTHONUNBUFFERED: 1

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]
        poetry-version: ["2.1.3"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry ${{ matrix.poetry-version }}
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          pip install poetry==${{ matrix.poetry-version }}

      - name: View Poetry version
        run: poetry --version

      - name: Install dependencies
        run: poetry install

      - name: Run migrations
        run: poetry run python manage.py migrate

      - name: Run tests
        run: poetry run pytest
